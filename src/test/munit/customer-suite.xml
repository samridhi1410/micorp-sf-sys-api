<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="customer-suite.xml" />
	<munit:test name="getCustomer-test1" doc:id="6a9ef5e1-b833-4988-8dd3-173303b5c0c8" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock customeDetails" doc:id="754f5aa5-aea3-477f-91c7-fc21169d1427" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="341fed69-e1de-429a-b466-8595afa27cae" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://getCustomertest1\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomertest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="orderId" value="#[output application/java --- readUrl('classpath://getCustomertest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="baca1e18-3a1e-49f4-88e0-ed8862612c76" >
				<munit:payload value="#[readUrl('classpath://getCustomertest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getCustomertest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomertest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomer" doc:id="be4386d2-a567-4876-803f-1512ed8db891" name="getCustomer"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d32fa4fa-387f-4e85-a62d-e5b313c405dc" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getCustomertest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify flowEnded" doc:id="279fdb77-a6b1-40c2-bf0e-1b8190ee81a6" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5caa112c-6e26-47a0-8d7c-993f6ea21f51" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="addCustomer-test" doc:id="f8ad9fd7-be6e-4e7c-9d73-68adce09296f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock CUstomer__c" doc:id="adda39d1-ff00-4a29-84bd-3b2cb3aa4d76" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1d8c0189-d503-4e1d-bf13-748082a75347" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://addCustomertest\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://addCustomertest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4ce7f659-60c9-483e-91e5-27cd6fc7b023" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://addCustomertest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://addCustomertest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://addCustomertest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to addCustomer" doc:id="ff06808a-d908-431e-b392-a28b25703c92" name="addCustomer"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a0d6e31b-63f7-4c19-9f47-fc76496f890f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import addCustomertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify flowEnded" doc:id="d235ee71-1722-4d90-bfd1-7a4b20b9b3bf" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0318703-a196-4e5d-a32b-f4427f466588" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
